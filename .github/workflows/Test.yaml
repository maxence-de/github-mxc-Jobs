name: Run tests on Znuny and update package

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      update:
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Test"
  Test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: debian:10-slim

    services:
      chrome:
        image: selenium/standalone-chrome:3.141.59-oxygen
        options: --shm-size="2g"
        volumes:
          - ${{ github.workspace }}:/opt/otrs

      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: "otrs"
          MYSQL_ROOT_PASSWORD: "secret"
          MYSQL_PASSWORD: "secret"
          MYSQL_DATABASE: "otrs"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install dependencies
        run: |
          uname -a
          apt-get update
          apt-get upgrade -y
          apt-get install -y libapache2-mod-perl2 libdbd-mysql-perl \
            libtimedate-perl libnet-dns-perl libnet-ldap-perl \
            libio-socket-ssl-perl libpdf-api2-perl libdbd-mysql-perl \
            libsoap-lite-perl libtext-csv-xs-perl libjson-xs-perl \
            libapache-dbi-perl libxml-libxml-perl libxml-libxslt-perl libspreadsheet-xlsx-perl \
            libyaml-perl libarchive-zip-perl  libcrypt-eksblowfish-perl \
            libencode-hanextra-perl libmail-imapclient-perl libtemplate-perl \
            libdatetime-perl libmoo-perl apache2 mariadb-client gnupg2 liblocale-po-perl \
            libhash-merge-perl libxml2-utils gnupg2 cpanminus make gcc git npm gettext \
            rsync

      - name: Check out latest Znuny relaise of the given version
        uses: actions/checkout@v3
        with:
          repository: Znuny/Znuny
          ref: rel-${{ inputs.version }}

      - name: Check out current repository
        uses: actions/checkout@v3
        with:
          path: mxcModule

      - name: Check out scripts
        uses: actions/checkout@v3
        with:
          path: mxcScripts
          repository: tipue-dev/Addon-Scripts
          token: ${{ secrets.CHECKOUTTOKEN }}
          
      - name: Run script
        run: |
          echo whoami
          ls -l mxcScripts
          chmod 777 mxcScripts/run.sh
          ls -l mxcScripts
          mxcScripts/run.sh
        env:
          MYSQL_USER: "otrs"
          MYSQL_ROOT_PASSWORD: "secret"
          MYSQL_PASSWORD: "secret"
          MYSQL_DATABASE: "otrs"
          CHECKOUTTOKEN: ${{ secrets.CHECKOUTTOKEN }}
          VERSION: ${{ inputs.version }}
        
      # get module code into the right place and remove original tests
#      - name: Run a multi-line script 2
#        run: |
#          mv scripts/test/sample sample
#          rm -r scripts/test/*
#          mv sample scripts/test/sample
#          chmod 777 mxcModule -R
      # rsync -a mxcModule/ ./

#      - name: clean up scripts
#        run: |
#          rsync -a mxcScripts/ ./scripts

#       - name: Setup Apache and system user
#         run: |
#           a2dismod mpm_event mpm_worker
#           a2enmod perl deflate filter headers mpm_prefork
#           useradd -d /opt/otrs -c 'OTRS user' -g www-data -s /bin/bash -M otrs

#       - name: Setup OTRS
#         env:
#           MYSQL_USER: "otrs"
#           MYSQL_ROOT_PASSWORD: "secret"
#           MYSQL_PASSWORD: "secret"
#           MYSQL_DATABASE: "otrs"
#         run: |
#           # yamllint disable rule:line-length
#           ln -sf $PWD /opt/otrs
#           ln -s /opt/otrs/scripts/apache2-httpd.include.conf /etc/apache2/sites-enabled/zzz_otrs.conf
#           apachectl start
#           cp Kernel/Config.pm.dist Kernel/Config.pm
#           sed -i 's/\(.*{DatabaseHost}.*\)127.0.0.1/\1'"mariadb"'/' /opt/otrs/Kernel/Config.pm
#           sed -i 's/\(.*{Database}.*\)otrs/\1'"${MYSQL_DATABASE}"'/' /opt/otrs/Kernel/Config.pm
#           sed -i 's/\(.*{DatabaseUser}.*\)otrs/\1'"${MYSQL_USER}"'/' /opt/otrs/Kernel/Config.pm
#           sed -i 's/\(.*{DatabasePw}.*\)some-pass/\1'"${MYSQL_PASSWORD}"'/' /opt/otrs/Kernel/Config.pm
#           sed -i 's/\(.*\$DIBI\$.*\)/\1\n    \$Self->{"TestHTTPHostname"} = "172.18.0.2";\n    \$Self->{'SecureMode'} = 1;\n    \$Self->{"SeleniumTestsConfig"} = {\n        remote_server_addr  => "chrome",\n        port                => "4444",\n        platform            => "ANY",\n        browser_name        => "chrome",\n        extra_capabilities => {\n            chromeOptions => {\n                # disable-infobars makes sure window size calculations are ok\n                args => [ "disable-infobars" ],\n            },\n        },\n    },\n/' /opt/otrs/Kernel/Config.pm
#           mkdir -p /opt/otrs/var/tmp
#           mysql -h mariadb -u "${MYSQL_USERNAME}" -p"${MYSQL_PASSWORD}" otrs < /opt/otrs/scripts/database/otrs-schema.mysql.sql
#           mysql -h mariadb -u "${MYSQL_USERNAME}" -p"${MYSQL_PASSWORD}" otrs < /opt/otrs/scripts/database/otrs-initial_insert.mysql.sql
#           mysql -h mariadb -u "${MYSQL_USERNAME}" -p"${MYSQL_PASSWORD}" otrs < /opt/otrs/scripts/database/otrs-schema-post.mysql.sql
#           touch /opt/otrs/installed
#           /opt/otrs/bin/otrs.SetPermissions.pl
#           su -c "bin/otrs.Console.pl Maint::Config::Rebuild" - otrs
#           su -c "bin/otrs.Console.pl Admin::Config::Update --setting-name CheckEmailAddresses --value 0" - otrs
#           su -c "bin/otrs.CheckSum.pl -a create" - otrs
#           /opt/otrs/bin/otrs.SetPermissions.pl

#       - name: Update Package to new Framework and install
#         run: |
#           perl scripts/UpdateFramework.pl --framework-version ${{ inputs.version }}

#       - name: Run UnitTests
#         env:
#           # Insert tests/options to run here if you're not interested in the whole suite
#           TEST_OPTIONS: ""
#         run: |
#           chmod 777 -R /opt/otrs/scripts/test/sample
#           su -c "bin/otrs.CheckSum.pl -a create" - otrs
#           su -c "bin/otrs.Console.pl Dev::UnitTest::Run ${TEST_OPTIONS}" - otrs
          
      # create branch
#       - name: Create new branch
#         run: |
#           cd mxcModule
#           git config --global user.email "noreply@maxence.de"
#           git config --global user.name "Workflow"
#          git remote set-url origin https://x-access-token:${{ secrets.CHECKOUTTOKEN }}@github.com/$GITHUB_REPOSITORY
#          git checkout -b update-rel_${{ inputs.version }}
#          git add -A
#          git commit -m "update-rel_${{ inputs.version }}"
#          git push --set-upstream origin update-rel_${{ inputs.version }}
          
      - name: Create pull request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.CHECKOUTTOKEN }}
          branch: update-rel_${{ inputs.version }}
          path: mxcModule
          title: 'Auto-generated update to Znuny ${{ inputs.version }}'
          body: |
            - Updated sopm
            - Created opm
            - Testes successfully on Znuny ${{ inputs.version }}

      - name: Archive screenshots from selenium
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: Download all selenium screenshots
          retention-days: 1
          path: /opt/otrs/var/httpd/htdocs/SeleniumScreenshots/*.png
          if-no-files-found: ignore
